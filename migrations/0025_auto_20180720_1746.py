# Generated by Django 2.0.6 on 2018-07-20 15:46

import awesome_avatar.fields
import commons.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields


class Migration(migrations.Migration):

    dependencies = [
        ('commons', '0024_manual_20180720_1614'),
    ]

    operations = [
        migrations.AlterField(
            model_name='featured',
            name='content_type',
            field=models.ForeignKey(blank=True, limit_choices_to=models.Q(model__in=('project', 'oer', 'learningpath', 'entry', 'post')), null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType', verbose_name='Optional reference to a project, a resource, an article or a post.'),
        ),
        migrations.AlterField(
            model_name='folder',
            name='documents',
            field=models.ManyToManyField(blank=True, related_name='document_folder', through='commons.FolderDocument', to='commons.Document', verbose_name='documents'),
        ),
        migrations.AlterField(
            model_name='folder',
            name='slug',
            field=django_extensions.db.fields.AutoSlugField(blank=True, editable=False, max_length=80, overwrite=True, populate_from=commons.models.Folder_slug_populate_from, unique=True),
        ),
        migrations.AlterField(
            model_name='folderdocument',
            name='slug',
            field=django_extensions.db.fields.AutoSlugField(blank=True, editable=False, max_length=80, overwrite=True, populate_from=commons.models.FolderDocument_slug_populate_from, unique=True),
        ),
        migrations.AlterField(
            model_name='folderdocument',
            name='state',
            field=models.IntegerField(choices=[(1, 'Draft'), (2, 'Submitted'), (3, 'Published'), (4, 'Un-published')], default=1, null=True, verbose_name='publication state'),
        ),
        migrations.AlterField(
            model_name='learningpath',
            name='big_image',
            field=awesome_avatar.fields.AvatarField(null=True, upload_to='images/lps/', verbose_name='featured image'),
        ),
        migrations.AlterField(
            model_name='learningpath',
            name='levels',
            field=models.ManyToManyField(blank=True, to='commons.LevelNode', verbose_name='Levels'),
        ),
        migrations.AlterField(
            model_name='learningpath',
            name='original_language',
            field=models.CharField(db_index=True, default='', max_length=5, verbose_name='original language code'),
        ),
        migrations.AlterField(
            model_name='learningpath',
            name='path_type',
            field=models.IntegerField(choices=[(1, 'simple collection'), (2, 'sequence'), (3, 'directed graph')], validators=[django.core.validators.MinValueValidator(1)], verbose_name='path type'),
        ),
        migrations.AlterField(
            model_name='learningpath',
            name='slug',
            field=django_extensions.db.fields.AutoSlugField(blank=True, editable=False, max_length=80, overwrite=True, populate_from='title', unique=True),
        ),
        migrations.AlterField(
            model_name='learningpath',
            name='small_image',
            field=awesome_avatar.fields.AvatarField(null=True, upload_to='images/lps/', verbose_name='logo'),
        ),
        migrations.AlterField(
            model_name='learningpath',
            name='state',
            field=models.IntegerField(choices=[(1, 'Draft'), (2, 'Submitted'), (3, 'Published'), (4, 'Un-published')], default=1, null=True, verbose_name='publication state'),
        ),
        migrations.AlterField(
            model_name='learningpath',
            name='subjects',
            field=models.ManyToManyField(blank=True, to='commons.SubjectNode', verbose_name='Subject areas'),
        ),
        migrations.AlterField(
            model_name='learningpath',
            name='tags',
            field=models.ManyToManyField(blank=True, to='commons.Tag', verbose_name='tags'),
        ),
        migrations.AlterField(
            model_name='metadatatype',
            name='validation',
            field=models.CharField(blank=True, choices=[('Parse date and time', 'Parse date and time'), ('Parse date', 'Parse date'), ('Parse time', 'Parse time')], max_length=64, verbose_name='Validation function name'),
        ),
        migrations.AlterField(
            model_name='oer',
            name='accessibility',
            field=models.ManyToManyField(blank=True, to='commons.AccessibilityEntry', verbose_name='accessibility features'),
        ),
        migrations.AlterField(
            model_name='oer',
            name='big_image',
            field=awesome_avatar.fields.AvatarField(null=True, upload_to='images/oers/', verbose_name=''),
        ),
        migrations.AlterField(
            model_name='oer',
            name='documents',
            field=models.ManyToManyField(blank=True, related_name='oer_document', through='commons.OerDocument', to='commons.Document', verbose_name='attached documents'),
        ),
        migrations.AlterField(
            model_name='oer',
            name='languages',
            field=models.ManyToManyField(blank=True, to='commons.Language', verbose_name='languages of OER'),
        ),
        migrations.AlterField(
            model_name='oer',
            name='levels',
            field=models.ManyToManyField(blank=True, to='commons.LevelNode', verbose_name='Levels'),
        ),
        migrations.AlterField(
            model_name='oer',
            name='media',
            field=models.ManyToManyField(blank=True, to='commons.MediaEntry', verbose_name='media formats'),
        ),
        migrations.AlterField(
            model_name='oer',
            name='metadata',
            field=models.ManyToManyField(blank=True, related_name='oer_metadata', through='commons.OerMetadata', to='commons.MetadataType', verbose_name='metadata'),
        ),
        migrations.AlterField(
            model_name='oer',
            name='oer_type',
            field=models.IntegerField(choices=[(1, 'Metadata only'), (2, 'Metadata and online reference'), (3, 'Metadata and document(s)')], default=2, validators=[django.core.validators.MinValueValidator(1)], verbose_name='OER type'),
        ),
        migrations.AlterField(
            model_name='oer',
            name='oers',
            field=models.ManyToManyField(blank=True, related_name='derived_from', to='commons.OER', verbose_name='derived from'),
        ),
        migrations.AlterField(
            model_name='oer',
            name='original_language',
            field=models.CharField(db_index=True, default='', max_length=5, verbose_name='original language code'),
        ),
        migrations.AlterField(
            model_name='oer',
            name='slug',
            field=django_extensions.db.fields.AutoSlugField(blank=True, editable=False, max_length=80, overwrite=True, populate_from='title', unique=True),
        ),
        migrations.AlterField(
            model_name='oer',
            name='small_image',
            field=awesome_avatar.fields.AvatarField(null=True, upload_to='images/oers/', verbose_name='screenshot'),
        ),
        migrations.AlterField(
            model_name='oer',
            name='source_type',
            field=models.IntegerField(choices=[(1, 'Catalogued source'), (2, 'Non-catalogued source'), (3, 'Derived-translated'), (4, 'Derived-adapted'), (5, 'Derived-remixed'), (6, 'none (brand new OER)')], default=2, validators=[django.core.validators.MinValueValidator(1)], verbose_name='source type'),
        ),
        migrations.AlterField(
            model_name='oer',
            name='state',
            field=models.IntegerField(choices=[(1, 'Draft'), (2, 'Submitted'), (3, 'Published'), (4, 'Un-published')], default=1, null=True, verbose_name='publication state'),
        ),
        migrations.AlterField(
            model_name='oer',
            name='subjects',
            field=models.ManyToManyField(blank=True, to='commons.SubjectNode', verbose_name='Subject areas'),
        ),
        migrations.AlterField(
            model_name='oer',
            name='tags',
            field=models.ManyToManyField(blank=True, to='commons.Tag', verbose_name='tags'),
        ),
        migrations.AlterField(
            model_name='oerevaluation',
            name='overall_score',
            field=models.IntegerField(choices=[('', '---------'), (1, 'poor'), (2, 'fair'), (3, 'good'), (4, 'very good'), (5, 'excellent')], verbose_name='overall quality assessment'),
        ),
        migrations.AlterField(
            model_name='oerevaluation',
            name='quality_metadata',
            field=models.ManyToManyField(blank=True, related_name='quality_metadata', through='commons.OerQualityMetadata', to='commons.QualityFacet', verbose_name='quality metadata'),
        ),
        migrations.AlterField(
            model_name='oerqualitymetadata',
            name='value',
            field=models.IntegerField(choices=[('', '---------'), (1, 'poor'), (2, 'fair'), (3, 'good'), (4, 'very good'), (5, 'excellent')], verbose_name='facet-related score'),
        ),
        migrations.AlterField(
            model_name='pathnode',
            name='children',
            field=models.ManyToManyField(blank=True, related_name='_parents', through='commons.PathEdge', to='commons.PathNode'),
        ),
        migrations.AlterField(
            model_name='project',
            name='big_image',
            field=awesome_avatar.fields.AvatarField(blank=True, null=True, upload_to='images/projects/', verbose_name='featured image'),
        ),
        migrations.AlterField(
            model_name='project',
            name='original_language',
            field=models.CharField(db_index=True, default='', max_length=5, verbose_name='original language code'),
        ),
        migrations.AlterField(
            model_name='project',
            name='slug',
            field=django_extensions.db.fields.AutoSlugField(blank=True, editable=False, max_length=80, overwrite=True, populate_from='name', unique=True),
        ),
        migrations.AlterField(
            model_name='project',
            name='small_image',
            field=awesome_avatar.fields.AvatarField(blank=True, null=True, upload_to='images/projects/', verbose_name='logo'),
        ),
        migrations.AlterField(
            model_name='project',
            name='state',
            field=models.IntegerField(choices=[(0, 'draft proposal'), (1, 'proposal submitted'), (2, 'project open'), (3, 'project closed'), (4, 'project deleted')], default=0, null=True, verbose_name='project state'),
        ),
        migrations.AlterField(
            model_name='projectmember',
            name='state',
            field=models.IntegerField(choices=[(0, 'request submitted'), (1, 'request accepted'), (2, 'request rejected'), (3, 'membership suspended or expired')], default=0, null=True, verbose_name='membership state'),
        ),
        migrations.AlterField(
            model_name='repo',
            name='big_image',
            field=awesome_avatar.fields.AvatarField(null=True, upload_to='images/repo/', verbose_name='featured image'),
        ),
        migrations.AlterField(
            model_name='repo',
            name='features',
            field=models.ManyToManyField(blank=True, to='commons.RepoFeature', verbose_name='repository features'),
        ),
        migrations.AlterField(
            model_name='repo',
            name='languages',
            field=models.ManyToManyField(blank=True, to='commons.Language', verbose_name='languages of documents'),
        ),
        migrations.AlterField(
            model_name='repo',
            name='original_language',
            field=models.CharField(db_index=True, default='', max_length=5, verbose_name='original language code'),
        ),
        migrations.AlterField(
            model_name='repo',
            name='slug',
            field=django_extensions.db.fields.AutoSlugField(blank=True, editable=False, max_length=80, overwrite=True, populate_from='name', unique=True),
        ),
        migrations.AlterField(
            model_name='repo',
            name='small_image',
            field=awesome_avatar.fields.AvatarField(null=True, upload_to='images/repo/', verbose_name='screenshot'),
        ),
        migrations.AlterField(
            model_name='repo',
            name='state',
            field=models.IntegerField(choices=[(1, 'Draft'), (2, 'Submitted'), (3, 'Published'), (4, 'Un-published')], default=1, null=True, verbose_name='publication state'),
        ),
        migrations.AlterField(
            model_name='repo',
            name='subjects',
            field=models.ManyToManyField(blank=True, to='commons.SubjectNode', verbose_name='Subject areas'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='slug',
            field=django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='name', unique=True),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='avatar',
            field=awesome_avatar.fields.AvatarField(upload_to='images/avatars/', verbose_name=''),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='gender',
            field=models.CharField(blank=True, choices=[('-', 'not specified'), ('m', 'male'), ('f', 'female')], default='-', max_length=1, null=True),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='languages',
            field=models.ManyToManyField(blank=True, help_text='The UI will support only EN, IT and PT.', to='commons.Language', verbose_name='known languages'),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='subjects',
            field=models.ManyToManyField(blank=True, to='commons.SubjectNode', verbose_name='interest areas'),
        ),
    ]
